# ==============================================================
# = SPRING API GATEWAY
# ==============================================================
server:
  port: 8765
  tomcat:
    threads:
      max: 5
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: SpringApiGateway
  lifecycle:
    timeout-per-shutdown-phase: 15s
  
  cloud:
    gateway:
      httpclient:
        #Timeout di connessione in ms
        connect-timeout: 2000 #2s
        #Timeout di risposta in s
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      enabled: true

# ==============================================================
# = Resilience4j Parameters
# ==============================================================
resilience4j:
  circuitbreaker:
    configs:
      default:
        #soglia in percentuali di fallimenti che che determina l'apeWrtura del circuito
        failureRateThreshold: 50
        #numero di chiamate di riferimento
        slidingWindowSize: 5
        #tempo di durata dello stato di circuito aperto
        wait-duration-in-open-state: 20000
        #numero di chiamate in stato half open
        permittedNumberOfCallsInHalfOpenState: 5
        #Se impiega pi√π di un secondo viene conteggiato come lento
        slow-call-duration-threshold: 1000
        slow-call-rate-threshold: 50.00

  timelimiter:
    configs:
      default:
        timeoutDuration: 3s

# ==============================================================
# = Eureka Properties  
# = Nota: prima di attivare il servizio servono tre heartbeat
# ==============================================================
eureka:
  # ==============================================================
  # = Impostazioni Instance
  # ==============================================================
  instance:
    #intervallo di attesa prima della rimozione del servizio (def 90 sec)
    lease-expiration-duration-in-seconds: 60
    #intervallo di invio dell'heartbeat (def 30 sec)
    leaseRenewalIntervalInSeconds: 15
    #id di identificazione dell'istanza
    instanceId: ${server.port}-${spring.application.name}
    #registrazione per indirizzo ip (defualt hostname)
    preferIpAddress: true
  # ==============================================================
  # = Impostazioni Client
  # ==============================================================
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://user:BimBumBam_2018@localhost:8761/eureka/}
    #time out di connessione in secondi al server Eureka (def 5 sec) 
    eureka-server-connect-timeout-seconds: 8


#==============================================================
# = Logs Parameters
# ==============================================================        
logging:
  level:
    org:
      springframework:
        security: DEBUG
        cloud: DEBUG
    io:
      github:
        resilience4j: DEBUG
    #org.springframework.security: DEBUG 

# ==============================================================
# = Parametri Sicurezza JWT 
# ==============================================================
sicurezza:
  header: Authorization
  secret: $123_Stella@xantrix.it

management:
  endpoints:
    web:
      exposure:
        include: '*'